from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async def start(update, context):
    keyboard = [
        [InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –∞—Å—Ç—Ä–æ–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", callback_data='open_app')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    message = (
        "<b>–ü–û–õ–£–ß–ò –õ–ò–ß–ù–´–ô –ê–°–¢–†–û–ü–†–û–§–ò–õ–¨</b>\n"
        "<i>–í—Å–µ–≥–æ 5 –º–∏–Ω—É—Ç ‚Äî –∏ –∑–≤—ë–∑–¥—ã –∑–∞–≥–æ–≤–æ—Ä—è—Ç</i>\n\n"
        "üîÆ –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –ê—Å—Ç—Ä–æ–¥–∞–º—É—Å, —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –∞—Å—Ç—Ä–æ–ø–æ–º–æ—â–Ω–∏–∫. –ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∞—Å—Ç—Ä–æ–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ üëá\n"
        "<i>–î–æ—Å—Ç—É–ø–Ω–æ –¥–æ 03:00 PM CEST —Å–µ–≥–æ–¥–Ω—è!</i>"
    )

    await update.message.reply_html(message, reply_markup=reply_markup)

async def button(update, context):
    query = update.callback_query
    await query.answer()
    if query.data == 'open_app':
        await query.edit_message_text("–í—ã –æ—Ç–∫—Ä—ã–ª–∏ –∞—Å—Ç—Ä–æ–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ! –°–∫–æ—Ä–æ –Ω–∞—á–Ω—ë–º –∞–Ω–∞–ª–∏–∑ —Ç–≤–æ–∏—Ö –∑–≤—ë–∑–¥. üåü")

def main():
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –±–µ–∑ drop_pending_updates
    application = Application.builder().token("7494465986:AAHEcDJbQ_MORjLojI3Q5jMerHh60D8k1Qc").build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button))

    # –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ post_init (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞)
    application.post_init = lambda app: app.update_queue.clear_pending_updates()

    application.run_polling()

if __name__ == '__main__':
    main()
